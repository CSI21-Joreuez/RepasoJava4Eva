/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.14
 * Generated at: 2022-01-21 11:18:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class NuevoRegistro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

try {
	String aux=session.getAttribute("id").toString();
} catch (Exception e) {
	response.sendRedirect("cerrarsesion.jsp");
}

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Mi Primer Formulario</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("	.inputgris {\n");
      out.write("		border: none; \n");
      out.write("		background-color: #DFDFDF;\n");
      out.write("		color: red;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function compruebayenvia() {\n");
      out.write("	datos=document.miformulario;\n");
      out.write("	if (datos.nombre.value == '' ||\n");
      out.write("			datos.apellidos.value == '' ||\n");
      out.write("			datos.usuario.value == '' ||\n");
      out.write("			datos.pass1.value == '')\n");
      out.write("		alert ('¡Tiene que rellenar todos los campos!');\n");
      out.write("	else\n");
      out.write("		if (datos.pass1.value!=datos.pass2.value)\n");
      out.write("			alert ('¡La contraseña no coincide con la repetición!');\n");
      out.write("		else datos.submit();\n");
      out.write("}\n");
      out.write("function compruebanums(campo, evento) {\n");
      out.write("	var keycode;\n");
      out.write("	if (window.event) keycode = window.event.keyCode;\n");
      out.write("	else if (evento) keycode = evento.which;\n");
      out.write("	else return true;\n");
      out.write("	if (keycode < 48 || keycode > 57) //Rango ASCII de números\n");
      out.write("	{\n");
      out.write("		if (keycode != 8 && keycode != 27 && keycode != 0 ) { //Caracteres especiales permitidos\n");
      out.write("			alert('Sólo puede introducir números ');\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		else return true;\n");
      out.write("	}\n");
      out.write("	else return true;\n");
      out.write("}\n");
      out.write("function compruebaalfan(campo, evento) {\n");
      out.write("	var keycode;\n");
      out.write("	if (window.event) keycode = window.event.keyCode;\n");
      out.write("	else if (evento) keycode = evento.which;\n");
      out.write("	else return true;\n");
      out.write("	if (( keycode < 48 || keycode > 57 ) && ( keycode < 64 || keycode > 90 ) && ( keycode < 97 || keycode > 122 )) //Rango ASCII de números y letras\n");
      out.write("	{\n");
      out.write("		if (keycode != 8 && keycode != 27 && keycode != 0 ) { //Caracteres especiales permitidos\n");
      out.write("			alert('Sólo puede introducir letras y números ');\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		else return true;\n");
      out.write("	}\n");
      out.write("	else return true;\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body style=\"font-family: sans-serif; font-size: 10pt; background-color: #FAFAFA;\">\n");
      out.write("\n");
      out.write("<h1>Ficha de Datos.</h1>\n");
      out.write("<form action=\"Registrado.jsp\" method=\"post\" name=\"miformulario\"/>\n");
      out.write("\n");
      out.write("<table style=\"text-align: left; border: none;\">\n");
      out.write("<tr><td>\n");
      out.write("<input type=\"hidden\" name=\"varoculta\" value=\"secreto\"/>\n");
      out.write("Nombre:\n");
      out.write("	</td><td><input type=\"text\" name=\"nombre\" onkeypress=\"return compruebaalfan(this,event);\" maxlength=\"50\" value=\"\" class=\"inputgris\"/>\n");
      out.write("</td></tr><tr><td>Apellidos:\n");
      out.write("	</td><td><input type=\"text\" name=\"apellidos\" onkeypress=\"return compruebaalfan(this,event);\" maxlength=\"100\" value=\"\" class=\"inputgris\"/>\n");
      out.write("</td></tr><tr><td>Movil (opcional):\n");
      out.write("	</td><td><input type=\"text\" name=\"movil\" onkeypress=\"return compruebanums(this,event);\" maxlength=\"9\" value=\"\" class=\"inputgris\"/>\n");
      out.write("</td></tr><tr><td>Usuario:\n");
      out.write("	</td><td><input type=\"text\" name=\"usuario\" onkeypress=\"return compruebaalfan(this,event);\" maxlength=\"10\" value=\"\" class=\"inputgris\"/>\n");
      out.write("</td></tr><tr><td>Contraseña:\n");
      out.write("	</td><td><input type=\"password\" name=\"pass1\" onkeypress=\"return compruebaalfan(this,event);\" maxlength=\"8\" value=\"\" class=\"inputgris\"/>\n");
      out.write("</td></tr><tr><td>Repetir Contr.:\n");
      out.write("	</td><td><input type=\"password\" name=\"pass2\" maxlength=\"8\" value=\"\" class=\"inputgris\"/>\n");
      out.write("</td></tr><tr><td>\n");
      out.write("	</td><td style=\"text-align: right;\">\n");
      out.write("		<input type=\"button\" name=\"send\" value=\"Enviar\" onclick=\"compruebayenvia();\"/>\n");
      out.write("</td></tr></table>\n");
      out.write("</form>\n");
      out.write("<hr/>\n");
      out.write("<a href=\"bienvenido.jsp\">Volver al Menu Inicial</a>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
